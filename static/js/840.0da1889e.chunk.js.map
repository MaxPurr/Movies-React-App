{"version":3,"file":"static/js/840.0da1889e.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.div`\n  display: flex;\n`;\n\nexport const ImageWrapper = styled.div`\n  overflow: hidden;\n  border-radius: 10px;\n  width: 450px;\n  height: 675px;\n\n  > img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const Information = styled.div`\n  height: 600px;\n  margin-left: 70px;\n  margin-top: 10px;\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n  font-size: 36px;\n  color: #fff;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-top: 25px;\n  font-size: 24px;\n  color: #b0b4c3;\n`;\n\nexport const Text = styled.p`\n  line-height: 30px;\n  margin-top: 10px;\n  font-size: 20px;\n  color: #b0b4c3;\n`;\n\nexport const UserScore = styled.span`\n  margin-left: 4px;\n  font-size: 20px;\n  border-radius: 30px;\n  padding: 4px 12px;\n  background-color: #3bba9c;\n  color: #fff;\n`;\n\nexport const AdditionalInformation = styled.ul`\n  list-style-type: none;\n  margin-top: 15px;\n  display: flex;\n  justify-content: space-between;\n  width: 190px;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n\n  > p {\n    text-transform: uppercase;\n    font-size: 20px;\n    border-radius: 30px;\n    padding: 6px 12px;\n    background-color: #707793;\n    color: #2e3047;\n  }\n\n  &.active {\n    > p {\n      background-color: #3bba9c;\n      color: #fff;\n    }\n  }\n`;\nexport const GoBackButton = styled.button`\n  font-size: 20px;\n  border: none;\n  position: absolute;\n  top: 90px;\n  left: 20px;\n  padding: 10px 26px;\n  background: #3bba9c;\n  border-radius: 30px;\n  color: #fff;\n`;\n","import { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from '../services/api';\nimport { Suspense } from 'react';\nimport {\n  ImageWrapper,\n  Section,\n  Information,\n  Title,\n  SubTitle,\n  Text,\n  UserScore,\n  AdditionalInformation,\n  Link,\n  GoBackButton,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieid } = useParams();\n\n  const [title, setTitle] = useState('');\n  const [userScore, setUserScore] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [poster, setPoster] = useState('');\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? null;\n\n  console.log(location);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const movieDetails = await getMovieDetails(movieid);\n        setPoster(movieDetails.poster);\n        setTitle(movieDetails.title);\n        setUserScore(movieDetails.userScore);\n        setOverview(movieDetails.overview);\n        setGenres(movieDetails.genres);\n      } catch (error) {}\n    };\n    fetch();\n  }, [movieid]);\n\n  const goBack = ev => navigate(backLinkHref, { replace: true });\n\n  return (\n    <>\n      {backLinkHref && <GoBackButton onClick={goBack}>Go back</GoBackButton>}\n      <Section>\n        <ImageWrapper>\n          <img src={poster} alt={title} />\n        </ImageWrapper>\n        <Information>\n          <div>\n            <Title>{title}</Title>\n            <Text>\n              User score: <UserScore>{userScore}%</UserScore>\n            </Text>\n            <SubTitle>Overview</SubTitle>\n            <Text>{overview}</Text>\n            <SubTitle>Genres</SubTitle>\n            <Text>{genres.join(', ')}</Text>\n          </div>\n          <div>\n            <SubTitle>Additional information</SubTitle>\n            <AdditionalInformation>\n              <li>\n                <Link to=\"cast\" state={{ from: backLinkHref }}>\n                  <p>Cast</p>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from: backLinkHref }}>\n                  <p>Reviews</p>\n                </Link>\n              </li>\n            </AdditionalInformation>\n          </div>\n        </Information>\n      </Section>\n      <Suspense feedback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = 'a319e917b3467e05f7f58bcf403053f1';\n\nconst fetch = async (path, params = {}) => {\n  params.api_key = api_key;\n  params.language = 'en-US';\n  const responce = await axios.get(path, { params: params });\n  if (responce.status !== 200) {\n    throw new Error(responce.status);\n  }\n  return responce.data;\n};\n\nexport const getTrending = async () => {\n  try {\n    const responce = await fetch('trending/movie/day');\n    const movies = responce.results.map(movie => {\n      return {\n        title: movie.title,\n        id: movie.id,\n        poster:\n          'https://image.tmdb.org/t/p/w300_and_h450_bestv2/' +\n          movie.poster_path,\n      };\n    });\n    return movies;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieid => {\n  try {\n    const responce = await fetch(`movie/${movieid}`);\n    const movieDetails = {\n      poster:\n        'https://image.tmdb.org/t/p/w600_and_h900_bestv2/' +\n        responce.poster_path,\n      title: responce.title,\n      userScore: Math.round(responce.vote_average * 10),\n      overview: responce.overview,\n      genres: responce.genres.map(genre => genre.name),\n    };\n    return movieDetails;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieid => {\n  try {\n    const responce = await fetch(`movie/${movieid}/credits`);\n    const cast = responce.cast.map(credit => {\n      return {\n        id: credit.id,\n        character: credit.character,\n        name: credit.name,\n        profile: credit.profile_path\n          ? `https://image.tmdb.org/t/p/w138_and_h175_face/${credit.profile_path}`\n          : 'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg',\n      };\n    });\n    return cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieid => {\n  try {\n    const responce = await fetch(`movie/${movieid}/reviews`, { page: 1 });\n    const reviews = responce.results.map(review => {\n      return {\n        author: review.author,\n        content: review.content,\n        id: review.id,\n      };\n    });\n    return reviews;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const responce = await fetch('search/movie', {\n      page: 1,\n      include_adult: false,\n      query: query,\n    });\n    const movies = responce.results.map(movie => {\n      return {\n        title: movie.title,\n        id: movie.id,\n        poster:\n          'https://image.tmdb.org/t/p/w300_and_h450_bestv2/' +\n          movie.poster_path,\n      };\n    });\n    return movies;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Section","styled","ImageWrapper","Information","Title","SubTitle","Text","UserScore","AdditionalInformation","Link","NavLink","GoBackButton","movieid","useParams","useState","title","setTitle","userScore","setUserScore","overview","setOverview","genres","setGenres","poster","setPoster","navigate","useNavigate","location","useLocation","backLinkHref","state","from","console","log","useEffect","fetch","getMovieDetails","movieDetails","onClick","ev","replace","src","alt","join","to","Suspense","feedback","axios","api_key","path","params","language","responce","status","Error","data","getTrending","movies","results","map","movie","id","poster_path","Math","round","vote_average","genre","name","getMovieCast","cast","credit","character","profile","profile_path","getMovieReviews","page","reviews","review","author","content","searchMovies","query","include_adult"],"sourceRoot":""}