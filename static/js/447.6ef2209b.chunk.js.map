{"version":3,"file":"static/js/447.6ef2209b.chunk.js","mappings":"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","sources":["components/Message.styled.js","components/Reviews.styled.js","components/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Message = styled.p`\n  color: #b0b4c3;\n  margin: 40px auto;\n  font-size: 24px;\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 40px;\n  list-style-type: none;\n  width: calc(100vw - 300px);\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 40px;\n  background-color: #000;\n  padding: 16px 20px;\n  border-radius: 10px;\n`;\n\nexport const Author = styled.h3`\n  margin-left: 20px;\n  font-size: 22px;\n  color: #b0b4c3;\n`;\n\nexport const Review = styled.p`\n  font-size: 20px;\n  line-height: 30px;\n  color: #707793;\n  &::before {\n    margin-top: 4px;\n    margin-bottom: 10px;\n    content: '';\n    width: 100%;\n    height: 2px;\n    background: linear-gradient(\n      90deg,\n      rgba(0, 0, 0, 1) 0%,\n      rgba(51, 161, 135, 1) 1%,\n      rgba(0, 0, 0, 1) 30%,\n      rgba(0, 0, 0, 1) 100%\n    );\n    display: block;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from '../services/api';\nimport { Message } from '../components/Message.styled';\nimport { List, ListItem, Author, Review } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieid } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const reviews = await getMovieReviews(movieid);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetch();\n  }, [movieid]);\n\n  return (\n    <div>\n      {reviews.length !== 0 ? (\n        <List>\n          {reviews.map(({ id, author, content }) => (\n            <ListItem key={id}>\n              <Author>{author}</Author>\n              <Review>{content}</Review>\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <Message>We don't have any reviews for this movie.</Message>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = 'a319e917b3467e05f7f58bcf403053f1';\n\nconst fetch = async (path, params = {}) => {\n  params.api_key = api_key;\n  params.language = 'en-US';\n  const responce = await axios.get(path, { params: params });\n  if (responce.status !== 200) {\n    throw new Error(responce.status);\n  }\n  return responce.data;\n};\n\nexport const getTrending = async () => {\n  try {\n    const responce = await fetch('trending/movie/day');\n    const movies = responce.results.map(movie => {\n      return {\n        title: movie.title,\n        id: movie.id,\n        poster:\n          'https://image.tmdb.org/t/p/w300_and_h450_bestv2/' +\n          movie.poster_path,\n      };\n    });\n    return movies;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieid => {\n  try {\n    const responce = await fetch(`movie/${movieid}`);\n    const movieDetails = {\n      poster:\n        'https://image.tmdb.org/t/p/w600_and_h900_bestv2/' +\n        responce.poster_path,\n      title: responce.title,\n      userScore: Math.round(responce.vote_average * 10),\n      overview: responce.overview,\n      genres: responce.genres.map(genre => genre.name),\n    };\n    return movieDetails;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieid => {\n  try {\n    const responce = await fetch(`movie/${movieid}/credits`);\n    const cast = responce.cast.map(credit => {\n      return {\n        id: credit.id,\n        character: credit.character,\n        name: credit.name,\n        profile: credit.profile_path\n          ? `https://image.tmdb.org/t/p/w138_and_h175_face/${credit.profile_path}`\n          : 'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg',\n      };\n    });\n    return cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieid => {\n  try {\n    const responce = await fetch(`movie/${movieid}/reviews`, { page: 1 });\n    const reviews = responce.results.map(review => {\n      return {\n        author: review.author,\n        content: review.content,\n        id: review.id,\n      };\n    });\n    return reviews;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const responce = await fetch('search/movie', {\n      page: 1,\n      include_adult: false,\n      query: query,\n    });\n    const movies = responce.results.map(movie => {\n      return {\n        title: movie.title,\n        id: movie.id,\n        poster:\n          'https://image.tmdb.org/t/p/w300_and_h450_bestv2/' +\n          movie.poster_path,\n      };\n    });\n    return movies;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Message","styled","List","ListItem","Author","Review","movieid","useParams","useState","reviews","setReviews","useEffect","fetch","getMovieReviews","console","log","message","length","map","id","author","content","axios","api_key","path","params","language","responce","status","Error","data","getTrending","movies","results","movie","title","poster","poster_path","getMovieDetails","movieDetails","userScore","Math","round","vote_average","overview","genres","genre","name","getMovieCast","cast","credit","character","profile","profile_path","page","review","searchMovies","query","include_adult"],"sourceRoot":""}